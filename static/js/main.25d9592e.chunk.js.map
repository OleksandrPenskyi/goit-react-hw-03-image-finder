{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","services/pics-api.js","App.js","index.js"],"names":["INITIAL_QUERY","value","Searchbar","state","handleSearchQuery","event","setState","currentTarget","handleSubmitForm","preventDefault","props","onSubmit","this","className","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","largeImageURL","onImgClick","onClick","src","alt","ImageGallery","pictures","map","id","Button","onBtnClick","Loader","color","height","width","modalRoot","document","querySelector","Modal","handleEscapeToCloseModal","code","onCloseModal","handleBackdropToCloseModal","target","window","addEventListener","removeEventListener","createPortal","axios","defaults","baseURL","searchValue","currentPage","get","then","response","data","hits","App","searchQuery","isLoading","isVisibleModal","fetchData","api","prevState","scrollTo","top","documentElement","scrollHeight","behavior","btnClick","handleSubmit","handleClickOnImg","link","handleCloseModal","prevProps","console","log","isVisibleBtn","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25d9592e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst INITIAL_QUERY = {\r\n  value: '',\r\n};\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    ...INITIAL_QUERY,\r\n  };\r\n\r\n  handleSearchQuery = event => {\r\n    this.setState({ value: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmitForm = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.value);\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmitForm} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handleSearchQuery}\r\n            value={value}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, onImgClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        onClick={() => onImgClick(largeImageURL)}\r\n        src={webformatURL}\r\n        alt=\"img\"\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ pictures, onImgClick }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {pictures.map(({ id, webformatURL, largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        webformatURL={webformatURL}\r\n        onImgClick={onImgClick}\r\n        largeImageURL={largeImageURL}\r\n        key={id}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\n\r\nconst Button = ({ onBtnClick }) => {\r\n  return (\r\n    <button onClick={onBtnClick} type=\"button\" className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport Spinner from 'react-loader-spinner';\r\n\r\nclass Loader extends Component {\r\n  render() {\r\n    return <Spinner type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />;\r\n  }\r\n}\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleEscapeToCloseModal);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleEscapeToCloseModal);\r\n  }\r\n\r\n  handleEscapeToCloseModal = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n\r\n  handleBackdropToCloseModal = event => {\r\n    if (event.target === event.currentTarget) {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImageURL } = this.props;\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropToCloseModal}>\r\n        <div className=\"Modal\">\r\n          <img src={largeImageURL} alt=\"big-img\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\nconst API_KEY = '21631018-2260b91e787408b7a6b929027';\r\n\r\nconst getPics = (searchValue, currentPage) => {\r\n  return axios\r\n    .get(\r\n      `/?q=${searchValue}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default { getPics };\r\n","import React, { Component } from 'react';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport Loader from './components/Loader';\r\nimport Modal from './components/Modal';\r\n\r\nimport api from './services/pics-api';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    pictures: [],\r\n    searchQuery: '',\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    isVisibleModal: false,\r\n    largeImageURL: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { searchQuery, currentPage } = this.state;\r\n\r\n    if (prevState.searchQuery !== searchQuery) {\r\n      console.log('Стейт обновился');\r\n      console.log('Стейт:', searchQuery);\r\n      this.fetchData(searchQuery, currentPage);\r\n    }\r\n  }\r\n\r\n  fetchData = (searchQuery, currentPage) => {\r\n    api\r\n      .getPics(searchQuery, currentPage)\r\n      .then(data => {\r\n        this.setState(prevState => ({\r\n          pictures: [...prevState.pictures, ...data],\r\n          currentPage: prevState.currentPage + 1,\r\n          isLoading: false,\r\n        }));\r\n      })\r\n      .then(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      });\r\n  };\r\n\r\n  btnClick = () => {\r\n    const { searchQuery, currentPage } = this.state;\r\n\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    this.fetchData(searchQuery, currentPage);\r\n  };\r\n\r\n  handleSubmit = searchValue => {\r\n    this.setState({\r\n      pictures: [],\r\n      searchQuery: searchValue,\r\n      currentPage: 1,\r\n      isLoading: true,\r\n    });\r\n  };\r\n\r\n  handleClickOnImg = link => {\r\n    this.setState({ largeImageURL: link, isVisibleModal: true });\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({\r\n      isVisibleModal: false,\r\n      largeImageURL: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { pictures, isLoading, isVisibleModal, largeImageURL } = this.state;\r\n    const isVisibleBtn = pictures.length > 0 && !isLoading;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.handleSubmit} />\r\n        <ImageGallery pictures={pictures} onImgClick={this.handleClickOnImg} />\r\n\r\n        {isLoading && <Loader />}\r\n        {isVisibleBtn && <Button onBtnClick={this.btnClick} />}\r\n\r\n        {isVisibleModal && (\r\n          <Modal\r\n            largeImageURL={largeImageURL}\r\n            onCloseModal={this.handleCloseModal}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './styles.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}